policy_module(mubdi, 1.100.1)

########################################
#
# Declarations
#

type mubdi_t;
type mubdi_exec_t;
init_daemon_domain(mubdi_t, mubdi_exec_t)

permissive mubdi_t;

type mubdi_initrc_exec_t;
init_script_file(mubdi_initrc_exec_t)

type mubdi_conf_t;
files_type(mubdi_conf_t)

type mubdi_var_lib_t;
files_type(mubdi_var_lib_t)

type mubdi_var_run_t;
files_type(mubdi_var_run_t)

type mubdi_port_t;
corenet_port(mubdi_port_t)

########################################
#
# mubdi local policy
#
allow mubdi_t self:process { fork };

allow mubdi_t self:fifo_file rw_fifo_file_perms;
allow mubdi_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(mubdi_t, mubdi_conf_t, mubdi_conf_t)
manage_files_pattern(mubdi_t, mubdi_conf_t, mubdi_conf_t)

manage_dirs_pattern(mubdi_t, mubdi_var_lib_t, mubdi_var_lib_t)
manage_files_pattern(mubdi_t, mubdi_var_lib_t, mubdi_var_lib_t)
files_var_lib_filetrans(mubdi_t, mubdi_var_lib_t, { dir file })

manage_dirs_pattern(mubdi_t, mubdi_var_run_t, mubdi_var_run_t)
manage_files_pattern(mubdi_t, mubdi_var_run_t, mubdi_var_run_t)

sysnet_dns_name_resolve(mubdi_t)
corenet_all_recvfrom_unlabeled(mubdi_t)

allow mubdi_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(mubdi_t)
corenet_tcp_sendrecv_generic_node(mubdi_t)
corenet_tcp_sendrecv_all_ports(mubdi_t)
corenet_tcp_bind_generic_node(mubdi_t)

gen_require(`
    type mubdi_port_t;
')
allow mubdi_t mubdi_port_t:tcp_socket name_bind;

gen_require(`
    type mubdi_port_t;
')
allow mubdi_t mubdi_port_t:tcp_socket name_connect;

domain_use_interactive_fds(mubdi_t)

files_read_etc_files(mubdi_t)

miscfiles_read_localization(mubdi_t)

sysnet_dns_name_resolve(mubdi_t)

allow mubdi_t mubdi_exec_t:file execute_no_trans;
allow mubdi_t self:process setsched;
corecmd_exec_ls(mubdi_t)
corenet_tcp_connect_http_port(mubdi_t)
dev_read_urand(mubdi_t)
fs_getattr_xattr_fs(mubdi_t)
kernel_read_system_state(mubdi_t)
